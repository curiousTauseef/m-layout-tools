{"version":3,"sources":["../js/_init.js","../js/_ui.js","../js/_breakpoints.js","../js/_viewport-info.js","../js/_device-Info.js","../js/_pictures-info.js","../js/layout_tools.js"],"names":["lt","vers","times","unitSpacing","lt_init","currentScript","document","currentDir","src","split","substring","lastIndexOf","framework","dataset","fw","css","head","insertAdjacentHTML","default_settings","hidden","pictures_info","stored_settings","sessionStorage","lt_settings","JSON","parse","settings","Object","assign","store_settings","param_obj","stringify","lt_ui","other_toolbars","wrapper_id","other_toolbars_selectors","get_other_toolbars","forEach","selector","this_toolbar","querySelector","push","body","wrapper","getElementById","innerHTML","content_wrapper","brkpt_wrapper","addEventListener","classList","toggle","hide_btn","set_hidden","add_storage","is_hidden","contains","toolbar","toggleAttribute","remove","lt_brkpt","dt_params","getAttribute","fw_breakpoints_map","bootstrap3","bootstrap4","foundation6","lt_viewport_info","lt_vpinfo","body_font_size","parseFloat","window","getComputedStyle","getPropertyValue","getViewportSize","body_width","clientWidth","body_width_em","toFixed","body_height","clientHeight","body_height_em","ResizeObserver","resizeObserver","observe","onresize","lt_device_info","lt_dinfo","navigator","userAgent","devicePixelRatio","screen","width","height","lt_pictures_info","pictures","getElementsByTagName","picturesInfoTrigger","removePicturesInfo","element","shortenSrcString","str","shortenSrc","srcElements","trim","strPrefix","length","slice","join","map","item","formatPropValue","prop","value","indexOf","showPicturesInfo","element_position","img_info_rows","img_props","rows","element_img","add","updPicturesInfo","upd_img_props","pct","checked"],"mappings":"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","sourcesContent":["export let lt = {\n  vers: '3.0',\n  times: '&VeryThinSpace;&times;&VeryThinSpace;', // carattere x e spaziatura\n  unitSpacing: '&VeryThinSpace;'\n};\n\nexport default function() {\n  'use strict';\n\n  // init\n  let currentScript = document.currentScript;\n  lt.currentDir = currentScript.src.split('?')[0];\n  lt.currentDir = lt.currentDir.substring(0, lt.currentDir.lastIndexOf('/'));\n\n  lt.framework = currentScript.dataset.fw || 'bootstrap4';\n  lt.css = currentScript.dataset.css || lt.currentDir + '/layout_tools.css';\n\n  // load css\n  document.head.insertAdjacentHTML('beforeend',\n    '<link rel=\"stylesheet\" href=\"' + lt.css + '?v=' + lt.vers + '\" type=\"text/css\" media=\"all\">'\n  );\n\n  // load settings from storage\n  const default_settings = {\n    hidden: false,\n    pictures_info: false\n  };\n\n  const stored_settings = sessionStorage.lt_settings? JSON.parse(sessionStorage.lt_settings) : {};\n  lt.settings = Object.assign({}, default_settings, stored_settings );\n\n\n  lt.store_settings = (( param_obj ) => {\n    lt.settings = Object.assign({}, lt.settings, param_obj );\n    sessionStorage.lt_settings = JSON.stringify(lt.settings);\n  });\n}\n","import {lt} from './_init';\n\nexport default function () {\n  'use strict';\n\n  // le toolbar aggiuntive possono essere caricate dopo layout tools\n  // e vengono quindi elborate dai selettori indicati in `other_toolbars_selectors`\n  let other_toolbars = null;\n\n  const wrapper_id = 'lt-wrapper',\n    other_toolbars_selectors = ['.sf-toolbar'], // selettori di altre toolbar da rimuovere\n\n    get_other_toolbars = () => {\n      if(other_toolbars === null) {\n        other_toolbars = [];\n        other_toolbars_selectors.forEach(selector => {\n          let this_toolbar = document.querySelector(selector);\n          if(this_toolbar) {\n            other_toolbars.push(this_toolbar);\n          }\n        });\n      }\n      return other_toolbars;\n    };\n\n\n  document.body.insertAdjacentHTML('beforeend', '<div id=\"' + wrapper_id + '\" class=\"lt-collapsed\"></div>');\n  lt.wrapper = document.getElementById(wrapper_id);\n\n  lt.wrapper.innerHTML = `<div class=\"lt-inner-wrapper\">\n      <div class=\"lt-content\">\n        <div>\n          <button class=\"lt-hide-show-btn\">Nascondi</button>\n          <button class=\"lt-remove-btn\">Elimina</button>\n        </div>\n      </div>\n      <div class=\"lt-brkpt\">&#x2732;</div>\n    </div>`;\n\n  lt.content_wrapper = lt.wrapper.querySelector('.lt-content');\n  lt.brkpt_wrapper = lt.wrapper.querySelector('.lt-brkpt');\n\n  // contrazione wrapper\n  lt.brkpt_wrapper.addEventListener('click', function () {\n    lt.wrapper.classList.toggle('lt-collapsed');\n  }, false);\n\n  // layout tools e sf toolbar invisibili\n  const hide_btn = lt.content_wrapper.querySelector('.lt-hide-show-btn'),\n    set_hidden = (add_storage) => {\n      lt.wrapper.classList.toggle('lt-hidden');\n      let is_hidden = lt.wrapper.classList.contains('lt-hidden');\n\n      get_other_toolbars().forEach(toolbar => {\n        toolbar.toggleAttribute('hidden', is_hidden);\n      });\n\n      hide_btn.innerHTML = is_hidden ? 'Mostra' : 'Nascondi';\n      if(add_storage) {\n        lt.store_settings({hidden: is_hidden});\n      }\n    };\n\n  hide_btn.addEventListener('click', () => {\n    set_hidden(true);\n  },false);\n\n  if(lt.settings.hidden) {\n    set_hidden(false);\n  }\n\n  // eliminazione completa delle barre\n  lt.content_wrapper.querySelector('.lt-remove-btn').addEventListener('click', () => {\n    lt.wrapper.remove();\n    get_other_toolbars().forEach(toolbar => {\n      toolbar.remove();\n    });\n    // la barra viene mostrata al successivo reload\n    lt.store_settings({hidden: false});\n  });\n}\n","import {lt} from './_init';\n\n/*\n  caricamento indicatori breakpoint e dimensioni viewport\n\n  Se lo script Ã¨ definito  il parametro `fw: __framework__`, viene visualizzato un div informativo\n  con breakpoint attivo, dimensioni della pagina ecc.\n  e caricato un css di formattazione\n\n  __framework__ corrisponde alla sigla del fw: bootstrap3, bootstrap4, foundation6, ecc.\n\n*/\n\nexport default function () {\n\n  let dt_params = {};\n  dt_params.fw = document.currentScript.getAttribute('data-fw') || 'bootstrap4';\n\n  const fw_breakpoints_map= {\n\n    bootstrap3  : '<span class=\"visible-xs-inline\">xs</span>' +\n        '<span class=\"visible-sm-inline\">sm</span>' +\n        '<span class=\"visible-md-inline\">md</span>' +\n        '<span class=\"visible-lg-inline\">lg</span>',\n\n    bootstrap4  : '<span class=\"d-sm-none\">xs</span>' +\n        '<span class=\"d-none d-sm-inline d-md-none\">sm</span>' +\n        '<span class=\"d-none d-md-inline d-lg-none\">md</span>' +\n        '<span class=\"d-none d-lg-inline d-xl-none\">lg</span>' +\n        '<span class=\"d-none d-xl-inline\">xl</span>',\n\n    foundation6 : '<span class=\"show-for-small-only\">small</span>' +\n        '<span class=\"show-for-medium-only\">medium</span>' +\n        '<span class=\"show-for-large-only\">large</span>' +\n        '<span class=\"show-for-xlarge\">xlarge</span>'\n  };\n\n  if(dt_params.fw) {\n    lt.brkpt_wrapper.innerHTML = fw_breakpoints_map[dt_params.fw];\n  }\n\n}\n","import {lt} from './_init';\n\nexport default function () {\n  'use strict';\n\n  //viewport info\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-vpinfo\"></div>');\n\n  const lt_vpinfo = lt.content_wrapper.querySelector('.lt-vpinfo'),\n    body_font_size = parseFloat(window.getComputedStyle(document.body, null)\n      .getPropertyValue('font-size')),\n    getViewportSize = function () {\n      let body_width = document.body.clientWidth,\n        body_width_em = (body_width / body_font_size).toFixed(2),\n        body_height = document.body.clientHeight,\n        body_height_em = (body_height / body_font_size).toFixed(2);\n\n      lt_vpinfo.innerHTML = `<div class=\"heading\">Viewport info</div>\n        ${body_width}${lt.times}${body_height}${lt.unitSpacing}px\n        <br>\n        ${body_width_em}${lt.times}${body_height_em}${lt.unitSpacing}em`;\n    };\n\n\n  getViewportSize();\n  if(ResizeObserver) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      getViewportSize();\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = getViewportSize; // safari, ie\n  }\n}\n","import {lt} from './_init';\n\nexport default function () {\n  'use strict';\n\n  //device info\n\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-device-info\"></div>');\n\n  const lt_dinfo = lt.content_wrapper.querySelector('.lt-device-info');\n\n  lt_dinfo.innerHTML = `<div class=\"heading\">Device info</div>\n    <dl>\n      <dt>userAgent</dt>\n      <dd>\n        ${window.navigator.userAgent}\n      </dd>\n      <dt>devicePixelRatio</dt>\n      <dd>\n        ${window.devicePixelRatio}\n      </dd>\n      <dt>screen.width / height</dt>\n      <dd>\n        ${window.screen.width}${lt.times}${window.screen.height}${lt.unitSpacing}px\n      </dd>\n    </dl>`;\n\n  return lt;\n\n}\n","import {lt} from './_init';\n\n//TODO imgs without picture and with size attribute\n\nexport default function () {\n  'use strict';\n\n  //ui\n  lt.content_wrapper.insertAdjacentHTML('beforeend',\n    '<div><label><input type=\"checkbox\" class=\"lt-pictures-info-trigger\">Pictures info</label</div>'\n  );\n\n  let pictures = document.getElementsByTagName('picture');\n\n  const picturesInfoTrigger = lt.content_wrapper.querySelector('.lt-pictures-info-trigger'),\n    removePicturesInfo = () => {\n      [...pictures].forEach(element => {\n        element.querySelector('.lt-picture-info-wrapper').remove();\n        element.classList.remove('lt-position-relative');\n      });\n    },\n    shortenSrcString = (str) => {\n      // mantiene solo gli ultimi due elementi del path\n      const shortenSrc = src => {\n        let srcElements = src.trim().split('/'),\n          strPrefix = srcElements.length > 2? '[&hellip;] /' : '';\n        return `<span title=\"${src}\">${strPrefix}${srcElements.slice(-2).join('/')}</span>`;\n      };\n\n      return str.split(',').map(item => {\n        return shortenSrc(item);\n      }).join(',<br>');\n    },\n    formatPropValue = (prop, value) => {\n      if(value) {\n        if(['src', 'currentSrc', 'srcset'].indexOf(prop) !== -1 ) {\n          return shortenSrcString(value);\n        } else {\n          return value;\n        }\n      } else {\n        return '&mdash;';\n      }\n    },\n\n    //img info\n    showPicturesInfo = () => {\n\n      [...pictures].forEach(element => {\n        // detect if picture element is positioned\n        let element_position = window.getComputedStyle(element).getPropertyValue('position');\n\n        const img_info_rows = () => {\n          const img_props = [\n            'src',\n            'currentSrc',\n            'srcset',\n            'sizes',\n            'media',\n            'width',\n            'height',\n            'naturalWidth',\n            'naturalHeight',\n            'id',\n            'className'\n          //'attributes'\n          ];\n\n          let rows = '',\n            element_img = element.querySelector('img');\n\n          img_props.forEach(prop => {\n            rows += `<tr>\n              <th scope=\"row\">${prop}</th>\n              <td class=\"lt-pct-${prop}\">${formatPropValue(prop, element_img[prop])}</td>\n            </tr>`;\n          });\n\n          return rows;\n        };\n\n        element.insertAdjacentHTML('beforeend',\n          `<div class=\"lt-picture-info-wrapper\">\n          <details>\n            <summary>Info</summary>\n            <table>\n              <tbody>\n                ${img_info_rows()}\n              </tbody>\n            </table>\n          </details>\n        </div>`\n        );\n\n        if( element_position === 'static' ) {\n          element.classList.add('lt-position-relative');\n        }\n\n      }); // end foreach\n    }, // end showPicturesInfo\n\n    updPicturesInfo = () => {\n      const upd_img_props = [\n        'currentSrc',\n        'width',\n        'height'\n      ];\n      [...pictures].forEach(pct => {\n        upd_img_props.forEach(prop => {\n          let element_img = pct.querySelector('img');\n          pct.querySelector(`td.lt-pct-${prop}`).innerHTML =\n            formatPropValue(prop, element_img[prop]);\n        });\n      }); // end foreach\n\n\n    }; // end updPicturesInfo\n\n  picturesInfoTrigger.addEventListener('click', () => {\n    lt.store_settings({pictures_info: picturesInfoTrigger.checked});\n\n    if( picturesInfoTrigger.checked ) {\n      showPicturesInfo();\n    } else {\n      removePicturesInfo();\n    }\n  }, false);\n\n  if(lt.settings.pictures_info) {\n    showPicturesInfo();\n    picturesInfoTrigger.checked = true;\n  }\n\n  if(ResizeObserver) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      if( picturesInfoTrigger.checked ) {\n        updPicturesInfo();\n      }\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = function () {\n      if( picturesInfoTrigger.checked ) {\n        updPicturesInfo();\n      }\n    }; // safari, ie\n  }\n\n}\n","/**\n * layout_tools.js - 3 / Massimo Cassandro / 2016-2020\n */\n\n\nimport lt_init from './_init';\nimport lt_ui from './_ui';\nimport lt_brkpt from './_breakpoints';\nimport lt_viewport_info from './_viewport-info';\nimport lt_device_info from './_device-Info';\nimport lt_pictures_info from './_pictures-info';\n\nlt_init();\nlt_ui();\nlt_brkpt();\nlt_viewport_info();\nlt_device_info();\nlt_pictures_info();\n"]}